globals:
  - id: light_1_busy
    type: bool
    initial_value: 'false'
  - id: light_2_busy
    type: bool
    initial_value: 'false'
  - id: light_3_busy
    type: bool
    initial_value: 'false'
  - id: light_4_busy
    type: bool
    initial_value: 'false'
  - id: light_5_busy
    type: bool
    initial_value: 'false'
  - id: light_6_busy
    type: bool
    initial_value: 'false'
  - id: light_7_busy
    type: bool
    initial_value: 'false'
  - id: light_8_busy
    type: bool
    initial_value: 'false'

script:
  - id: toggle_light
    mode: parallel
    max_runs: 8
    parameters:
      light_num: int
      light_wanted_state: bool
    then:
      - lambda: |-
          esphome::template_::TemplateSwitch* lights[] = {
            nullptr,
            id(light_1), id(light_2), id(light_3), id(light_4),
            id(light_5), id(light_6), id(light_7), id(light_8)
          };
          
          bool* busy_flags[] = {
            nullptr,
            &id(light_1_busy), &id(light_2_busy), &id(light_3_busy), &id(light_4_busy),
            &id(light_5_busy), &id(light_6_busy), &id(light_7_busy), &id(light_8_busy)
          };
          
          if (light_num < 1 || light_num > 8) return;
          
          // Check if this light is already being processed
          if (*busy_flags[light_num]) {
            ESP_LOGW("toggle", "Light %d is already being toggled, ignoring request", light_num);
            return;
          }
          
          // Check if already in desired state
          if (light_wanted_state == lights[light_num]->state) {
            ESP_LOGW("toggle", "Light %d already correct state, ignoring request", light_num);
            return;
          }
          
          // Mark as busy
          *busy_flags[light_num] = true;
          id(pulse_relay_with_retry).execute(light_num, light_wanted_state, 1);

  - id: pulse_relay_with_retry
    mode: parallel
    max_runs: 24
    parameters:
      light_num: int
      light_wanted_state: bool
      attempt: int
    then:
      - lambda: |-
          esphome::gpio::GPIOSwitch* relays[] = {
            nullptr,
            id(relay_1), id(relay_2), id(relay_3), id(relay_4),
            id(relay_5), id(relay_6), id(relay_7), id(relay_8)
          };
          relays[light_num]->turn_on();
      
      - delay: 250ms
      
      - lambda: |-
          esphome::gpio::GPIOSwitch* relays[] = {
            nullptr,
            id(relay_1), id(relay_2), id(relay_3), id(relay_4),
            id(relay_5), id(relay_6), id(relay_7), id(relay_8)
          };
          relays[light_num]->turn_off();

      - delay: 600ms
      - delay: 600ms
      
      - lambda: |-
          esphome::template_::TemplateSwitch* lights[] = {
            nullptr,
            id(light_1), id(light_2), id(light_3), id(light_4),
            id(light_5), id(light_6), id(light_7), id(light_8)
          };
          
          bool* busy_flags[] = {
            nullptr,
            &id(light_1_busy), &id(light_2_busy), &id(light_3_busy), &id(light_4_busy),
            &id(light_5_busy), &id(light_6_busy), &id(light_7_busy), &id(light_8_busy)
          };
          
          // Check if it worked
          if (lights[light_num]->state != light_wanted_state) {
            if (attempt < 3) {
              ESP_LOGW("toggle", "Light %d attempt %d failed, retrying...", light_num, attempt);
              id(pulse_relay_with_retry).execute(light_num, light_wanted_state, attempt + 1);
            } else {
              ESP_LOGE("toggle", "Light %d failed after 3 attempts", light_num);
              // Release the lock
              *busy_flags[light_num] = false;
            }
          } else {
            ESP_LOGI("toggle", "Light %d successfully toggled to %s", light_num, light_wanted_state ? "ON" : "OFF");
            // Release the lock
            *busy_flags[light_num] = false;
          }

switch:
  - platform: restart
    name: "Restart device"
  ###### RELAYS #########
  - platform: gpio
    name: "Relay_1"
    pin: 13
    id: relay_1
    internal: $hide_outputs
    restore_mode: RESTORE_DEFAULT_OFF
  - platform: gpio
    name: "Relay_2"
    pin: 12
    id: relay_2
    internal: $hide_outputs
    restore_mode: RESTORE_DEFAULT_OFF
  - platform: gpio
    name: "Relay_3"
    pin: 4
    id: relay_3
    internal: $hide_outputs
    restore_mode: RESTORE_DEFAULT_OFF
  - platform: gpio
    name: "Relay_4"
    pin: 27
    id: relay_4
    internal: $hide_outputs
    restore_mode: RESTORE_DEFAULT_OFF
  - platform: gpio
    name: "Relay_5"
    id: relay_5
    internal: $hide_outputs
    restore_mode: RESTORE_DEFAULT_OFF
    pin: 26
  - platform: gpio
    name: "Relay_6"
    pin: 25
    internal: $hide_outputs
    restore_mode: RESTORE_DEFAULT_OFF
    id: relay_6
  - platform: gpio
    name: "Relay_7"
    pin: 33
    id: relay_7
    internal: $hide_outputs
    restore_mode: RESTORE_DEFAULT_OFF
  - platform: gpio
    name: "Relay_8"
    pin: 32
    id: relay_8
    internal: $hide_outputs
    restore_mode: RESTORE_DEFAULT_OFF

  ###### Virtual switches ########
  - platform: template
    name: "light_1"
    id: light_1
    lambda: return id(input_1).state;
    restore_mode: DISABLED
    turn_on_action:
      - script.execute:
          id: toggle_light
          light_num: 1
          light_wanted_state: true
    turn_off_action:
      - script.execute:
          id: toggle_light
          light_num: 1
          light_wanted_state: false

  - platform: template
    name: "light_2"
    id: light_2
    lambda: return id(input_2).state;
    restore_mode: DISABLED
    turn_on_action:
      - script.execute:
          id: toggle_light
          light_num: 2
          light_wanted_state: true
    turn_off_action:
      - script.execute:
          id: toggle_light
          light_num: 2
          light_wanted_state: false

  - platform: template
    name: "light_3"
    id: light_3
    lambda: return id(input_3).state;
    restore_mode: DISABLED
    turn_on_action:
      - script.execute:
          id: toggle_light
          light_num: 3
          light_wanted_state: true
    turn_off_action:
      - script.execute:
          id: toggle_light
          light_num: 3
          light_wanted_state: false

  - platform: template
    name: "light_4"
    id: light_4
    lambda: return id(input_4).state;
    restore_mode: DISABLED
    turn_on_action:
      - script.execute:
          id: toggle_light
          light_num: 4
          light_wanted_state: true
    turn_off_action:
      - script.execute:
          id: toggle_light
          light_num: 4
          light_wanted_state: false

  - platform: template
    name: "light_5"
    id: light_5
    lambda: return id(input_5).state;
    restore_mode: DISABLED
    turn_on_action:
      - script.execute:
          id: toggle_light
          light_num: 5
          light_wanted_state: true
    turn_off_action:
      - script.execute:
          id: toggle_light
          light_num: 5
          light_wanted_state: false

  - platform: template
    name: "light_6"
    id: light_6
    lambda: return id(input_6).state;
    restore_mode: DISABLED
    turn_on_action:
      - script.execute:
          id: toggle_light
          light_num: 6
          light_wanted_state: true
    turn_off_action:
      - script.execute:
          id: toggle_light
          light_num: 6
          light_wanted_state: false

  - platform: template
    name: "light_7"
    id: light_7
    lambda: return id(input_7).state;
    restore_mode: DISABLED
    turn_on_action:
      - script.execute:
          id: toggle_light
          light_num: 7
          light_wanted_state: true
    turn_off_action:
      - script.execute:
          id: toggle_light
          light_num: 7
          light_wanted_state: false

  - platform: template
    name: "light_8"
    id: light_8
    lambda: return id(input_8).state;
    restore_mode: DISABLED
    turn_on_action:
      - script.execute:
          id: toggle_light
          light_num: 8
          light_wanted_state: true
    turn_off_action:
      - script.execute:
          id: toggle_light
          light_num: 8
          light_wanted_state: false

binary_sensor:
  - platform: gpio
    pin: 
      number: 14
      mode:
        input: true
        pulldown: true
    id: input_1
    name: "Input_1"
    internal: $hide_inputs
    device_class: power
    filters:
      - delayed_on: 400ms
      - delayed_off: 400ms

  - platform: gpio
    pin: 
      number: 16
      mode:
        input: true
        pulldown: true
    id: input_2
    name: "Input_2"
    internal: $hide_inputs
    device_class: power
    filters:
      - delayed_on: 400ms
      - delayed_off: 400ms
  
  - platform: gpio
    pin: 
      number: 17
      mode:
        input: true
        pulldown: true
    id: input_3
    name: "Input_3"
    internal: $hide_inputs
    device_class: power
    filters:
      - delayed_on: 400ms
      - delayed_off: 400ms

  - platform: gpio
    pin: 
      number: 18
      mode:
        input: true
        pulldown: true
    id: input_4
    name: "Input_4"
    internal: $hide_inputs
    device_class: power
    filters:
      - delayed_on: 400ms
      - delayed_off: 400ms

  - platform: gpio
    pin: 
      number: 19
      mode:
        input: true
        pulldown: true
    id: input_5
    name: "Input_5"
    internal: $hide_inputs
    device_class: power
    filters:
      - delayed_on: 400ms
      - delayed_off: 400ms

  - platform: gpio
    pin: 
      number: 21
      mode:
        input: true
        pulldown: true
    id: input_6
    name: "Input_6"
    internal: $hide_inputs
    device_class: power
    filters:
      - delayed_on: 400ms
      - delayed_off: 400ms

  - platform: gpio
    pin: 
      number: 22
      mode:
        input: true
        pulldown: true
    id: input_7
    name: "Input_7"
    internal: $hide_inputs
    device_class: power
    filters:
      - delayed_on: 400ms
      - delayed_off: 400ms

  - platform: gpio
    pin: 
      number: 23
      mode:
        input: true
        pulldown: true
    id: input_8
    name: "Input_8"
    internal: $hide_inputs
    device_class: power
    filters:
      - delayed_on: 400ms
      - delayed_off: 400ms
