number:
  - platform: template
    name: "keep_pressing_button_delay"
    id: delay_on
    min_value: 100
    max_value: 1000
    step: 50
    initial_value: 250
    optimistic: true
    restore_value: true
    unit_of_measurement: "ms"
    mode: slider
  - platform: template
    name: "after_push_delay"
    id: delay_off
    min_value: 500
    max_value: 1500
    step: 100
    initial_value: 1000
    optimistic: true
    restore_value: true
    unit_of_measurement: "ms"
    mode: slider
  - platform: template
    name: "on_detection_delay"
    id: detection_delay
    min_value: 200
    max_value: 1500
    step: 100
    initial_value: 300
    optimistic: true
    restore_value: true
    unit_of_measurement: "ms"
    mode: slider

script:
  - id: toggle_light
    mode: queued
    max_runs: 8
    parameters:
      light_num: int
      light_wanted_state: bool
    then:
      - lambda: |-
          // Arrays of component pointers (index 0 is unused for 1-based indexing)
          esphome::template_::TemplateSwitch* lights[] = {
            nullptr,
            id(light_1), id(light_2), id(light_3), id(light_4),
            id(light_5), id(light_6), id(light_7), id(light_8)
          };
          
          esphome::gpio::GPIOSwitch* relays[] = {
            nullptr,
            id(relay_1), id(relay_2), id(relay_3), id(relay_4),
            id(relay_5), id(relay_6), id(relay_7), id(relay_8)
          };
          
          // Validate light_num
          if (light_num < 1 || light_num > 8) return;
          
          // Only toggle if state needs to change
          if (light_wanted_state != lights[light_num]->state) {
            relays[light_num]->turn_on();
            delay(id(delay_on).state);
            relays[light_num]->turn_off();
            delay(id(delay_off).state);
          }

switch:
  - platform: restart
    name: "Restart device"
  ###### RELAYS #########
  - platform: gpio
    name: "Relay_1"
    pin: 13
    id: relay_1
    internal: $hide_outputs
    restore_mode: RESTORE_DEFAULT_OFF
  - platform: gpio
    name: "Relay_2"
    pin: 12
    id: relay_2
    internal: $hide_outputs
    restore_mode: RESTORE_DEFAULT_OFF
  - platform: gpio
    name: "Relay_3"
    pin: 4
    id: relay_3
    internal: $hide_outputs
    restore_mode: RESTORE_DEFAULT_OFF
  - platform: gpio
    name: "Relay_4"
    pin: 27
    id: relay_4
    internal: $hide_outputs
    restore_mode: RESTORE_DEFAULT_OFF
  - platform: gpio
    name: "Relay_5"
    id: relay_5
    internal: $hide_outputs
    restore_mode: RESTORE_DEFAULT_OFF
    pin: 26
  - platform: gpio
    name: "Relay_6"
    pin: 25
    internal: $hide_outputs
    restore_mode: RESTORE_DEFAULT_OFF
    id: relay_6
  - platform: gpio
    name: "Relay_7"
    pin: 33
    id: relay_7
    internal: $hide_outputs
    restore_mode: RESTORE_DEFAULT_OFF
  - platform: gpio
    name: "Relay_8"
    pin: 32
    id: relay_8
    internal: $hide_outputs
    restore_mode: RESTORE_DEFAULT_OFF

  ###### Virtual switches ########
  - platform: template
    name: "light_1"
    id: light_1
    lambda: return id(input_1).state;
    turn_on_action:
      - script.execute:
          id: toggle_light
          light_num: 1
          light_wanted_state: true
    turn_off_action:
      - script.execute:
          id: toggle_light
          light_num: 1
          light_wanted_state: false
  - platform: template
    name: "light_2"
    id: light_2
    lambda: return id(input_2).state;
    turn_on_action:
      - script.execute:
          id: toggle_light
          light_num: 2
          light_wanted_state: true
    turn_off_action:
      - script.execute:
          id: toggle_light
          light_num: 2
          light_wanted_state: false

  - platform: template
    name: "light_3"
    id: light_3
    lambda: return id(input_3).state;
    turn_on_action:
      - script.execute:
          id: toggle_light
          light_num: 3
          light_wanted_state: true
    turn_off_action:
      - script.execute:
          id: toggle_light
          light_num: 3
          light_wanted_state: false

  - platform: template
    name: "light_4"
    id: light_4
    lambda: return id(input_4).state;
    turn_on_action:
      - script.execute:
          id: toggle_light
          light_num: 4
          light_wanted_state: true
    turn_off_action:
      - script.execute:
          id: toggle_light
          light_num: 4
          light_wanted_state: false

  - platform: template
    name: "light_5"
    id: light_5
    lambda: return id(input_5).state;
    turn_on_action:
      - script.execute:
          id: toggle_light
          light_num: 5
          light_wanted_state: true
    turn_off_action:
      - script.execute:
          id: toggle_light
          light_num: 5
          light_wanted_state: false

  - platform: template
    name: "light_6"
    id: light_6
    lambda: return id(input_6).state;
    turn_on_action:
      - script.execute:
          id: toggle_light
          light_num: 6
          light_wanted_state: true
    turn_off_action:
      - script.execute:
          id: toggle_light
          light_num: 6
          light_wanted_state: false

  - platform: template
    name: "light_7"
    id: light_7
    lambda: return id(input_7).state;
    turn_on_action:
      - script.execute:
          id: toggle_light
          light_num: 7
          light_wanted_state: true
    turn_off_action:
      - script.execute:
          id: toggle_light
          light_num: 7
          light_wanted_state: false

  - platform: template
    name: "light_8"
    id: light_8
    lambda: return id(input_8).state;
    turn_on_action:
      - script.execute:
          id: toggle_light
          light_num: 8
          light_wanted_state: true
    turn_off_action:
      - script.execute:
          id: toggle_light
          light_num: 8
          light_wanted_state: false

binary_sensor:
  - platform: gpio
    pin: 14
    id: input_1
    name: "Input_1"
    internal: $hide_inputs
    device_class: power
    filters:
      - delayed_on: !lambda |-
          return id(detection_delay).state;
  - platform: gpio
    pin: 16
    id: input_2
    name: "Input_2"
    internal: $hide_inputs
    device_class: power
    filters:
      - delayed_on: !lambda |-
          return id(detection_delay).state;
  - platform: gpio
    pin: 17
    id: input_3
    name: "Input_3"
    internal: $hide_inputs
    device_class: power
    filters:
      - delayed_on: !lambda |-
          return id(detection_delay).state;
  - platform: gpio
    pin: 18
    id: input_4
    name: "Input_4"
    internal: $hide_inputs
    device_class: power
    filters:
      - delayed_on: !lambda |-
          return id(detection_delay).state;
  - platform: gpio
    pin: 19
    id: input_5
    name: "Input_5"
    internal: $hide_inputs
    device_class: power
    filters:
      - delayed_on: !lambda |-
          return id(detection_delay).state;
  - platform: gpio
    pin: 21
    id: input_6
    name: "Input_6"
    internal: $hide_inputs
    device_class: power
    filters:
      - delayed_on: !lambda |-
          return id(detection_delay).state;
  - platform: gpio
    pin: 22
    id: input_7
    name: "Input_7"
    internal: $hide_inputs
    device_class: power
    filters:
      - delayed_on: !lambda |-
          return id(detection_delay).state;
  - platform: gpio
    pin: 23
    id: input_8
    name: "Input_8"
    internal: $hide_inputs
    device_class: power
    filters:
      - delayed_on: !lambda |-
          return id(detection_delay).state;
